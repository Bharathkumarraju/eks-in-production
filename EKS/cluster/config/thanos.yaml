objstoreConfig: |-
  "type": "s3"
  "config":
    "bucket": "${bucket}"
    "endpoint": "${endpoint}"
    "sse_config":
      "kms_key_id": "${kms_key_id}"
      "type": "SSE-KMS"

query:
  logFormat: json
  replicaLabel: [prometheus_replica]
  dnsDiscovery:
    sidecarsService: kube-prometheus-stack-thanos-discovery
    sidecarsNamespace : ${namespace}
  resources:
    requests:
      cpu: 50m
      memory: 64Mi

queryFrontend:
  logFormat: json
  resources:
    requests:
      cpu: 10m
      memory: 32Mi

bucketweb:
  enabled: true
  logFormat: json
  resources:
    requests:
      cpu: 10m
      memory: 32Mi

compactor:
  enabled: true
  logFormat: json
  retentionResolutionRaw: 7d
  retentionResolution5m: 30d
  retentionResolution1h: 90d
  resources:
    requests:
      cpu: 50m
      memory: 128Mi
  persistence:
    size: 20Gi

storegateway:
  enabled: true
  logFormat: json
  resources:
    requests:
      cpu: 100m
      memory: 128Mi

metrics:
  enabled: true
  serviceMonitor:
    enabled: true
    labels:
      release: kube-prometheus-stack
  prometheusRule:
    enabled: true
    default:
      absent_rules: true
      compaction: true
      query: true
      store_gateway: true
      disabled:
        ThanosReceiveIsDown: true
        ThanosRuleIsDown: true
        ThanosSidecarIsDown: true
    additionalLabels:
      release: kube-prometheus-stack
